server:
  port: 8081

spring:
  application:
    name: tourism-core-service
  
  datasource:
    url: jdbc:h2:mem:tourism_db
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  
  h2:
    console:
      enabled: true
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  
  data:
    mongodb:
      uri: mongodb://localhost:27017/tourism_db
      repositories:
        enabled: false

  # Disable Mongo auto-configuration for local dev when MongoDB is not available.
  # Remove or comment this out if you run a MongoDB instance and want booking history persisted.
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
      - org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
      - org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration

# JWT Configuration
app:
  jwt:
    secret: tourismSecretKeyThatIsVeryLongAndSecureForJWTTokenGenerationAndValidation2024
    expiration: 86400000 # 24 hours in milliseconds

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

logging:
  level:
    com.tourism: DEBUG
    org.springframework.security: DEBUG
